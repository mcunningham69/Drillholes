<Page x:Class="Drillholes.Windows.Dialogs.DrillholeImportPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Drillholes.Windows.Dialogs"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
        Title="Select Drillhole Fields" Height="450" MinWidth="950" Width="Auto" FlowDirection="LeftToRight" >

    <Page.Background>
        <ImageBrush ImageSource="../Images/fault.jpg" ></ImageBrush>
    </Page.Background>

    <Page.Resources>
        <Style TargetType="Border">
            <Setter Property="BorderBrush" Value="Purple"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Setter Property="CornerRadius" Value="20"/>

        </Style>
        
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="350"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="10"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="280"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid.Resources>
            <ControlTemplate x:Key="temGlassButton" TargetType="{x:Type Button}">
                <ControlTemplate.Resources>
                    <!-- Base style that sets corner radii and stroke thickness. -->
                    <Style x:Key="styBase" TargetType="{x:Type Rectangle}">
                        <Setter Property="RadiusX" Value="20"/>
                        <Setter Property="RadiusY" Value="20"/>
                        <Setter Property="StrokeThickness" Value="5"/>
                    </Style>

                    <!-- Style for "normal" status. -->
                    <Style TargetType="{x:Type Rectangle}" BasedOn="{StaticResource styBase}">
                        <Setter Property="Fill">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="DarkGreen" Offset="0"/>
                                    <GradientStop Color="LightGreen" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Stroke">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="DarkGreen" Offset="1"/>
                                    <GradientStop Color="LightGreen" Offset="0"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- Style when IsDefaulted. -->
                    <Style x:Key="styIsDefaulted" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource styBase}">
                        <Setter Property="Fill">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="DarkGreen" Offset="0"/>
                                    <GradientStop Color="LightGreen" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Stroke">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="DarkGreen" Offset="1"/>
                                    <GradientStop Color="Black" Offset="0"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- Style when disabled. -->
                    <Style x:Key="styDisabled" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource styBase}">
                        <Setter Property="Opacity" Value="0.75"/>
                        <Setter Property="Fill">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="Gray" Offset="0"/>
                                    <GradientStop Color="White" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Stroke">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Color="Gray" Offset="1"/>
                                    <GradientStop Color="White" Offset="0"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ControlTemplate.Resources>
                <Grid x:Name="grdMain" ClipToBounds="True" Opacity="0.5"
			 Width="{TemplateBinding Width}"
			 Height="{TemplateBinding Height}">
                    <Rectangle x:Name="rectMain"/>

                    <ContentPresenter
				 VerticalAlignment="Center"
                 HorizontalAlignment="Center"/>
                </Grid>

                <!-- Behaviors. -->
                <ControlTemplate.Triggers>
                    <!-- Mouse over. -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="grdMain" Property="Opacity"
                     Value="0.75"/>
                    </Trigger>

                    <!-- Focus. -->
                    <Trigger Property="IsFocused" Value="True">
                        <Setter TargetName="grdMain" Property="Opacity"
                     Value="0.75"/>
                    </Trigger>

                    <!-- Defaulted. -->
                    <Trigger Property="IsDefaulted" Value="True">
                        <Setter TargetName="rectMain" Property="Style"
                     Value="{StaticResource styIsDefaulted}"/>
                    </Trigger>

                    <!-- Pressed. This comes after Focus so it gets precedence. -->
                    <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="grdMain" Property="Opacity"
                     Value="1"/>
                    </Trigger>

                    <!-- Disabled. This comes last so it gets ultimate precedence. -->
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="rectMain" Property="Style"
                     Value="{StaticResource styDisabled}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="Button">
                <Setter Property="Width" Value="110"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="FontStyle" Value="Normal"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Template" Value="{StaticResource temGlassButton}"/>
            </Style>

            <Style TargetType="{x:Type DataGrid}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="Gray"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>

        <Label Grid.Column="2" Grid.Row="1" Content="Table Preview" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="18" FontWeight="Bold" />
        <Label Grid.Column="4" Grid.Row="1" Content="Select Fields" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="18" FontWeight="Bold"/>

        <Rectangle Height="1" Fill="DarkGray" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>

        <DataGrid Visibility="Visible" Opacity="0.75" VerticalAlignment="Top" BorderBrush="Red" Name="dataPreview" ItemsSource="{Binding}" Grid.Column="1" Grid.Row="2" Height="Auto" Width="Auto" MinWidth="200"
                  AutoGenerateColumns="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" IsReadOnly="True" Margin="0,0,0,0" Grid.ColumnSpan="2">
        </DataGrid>

        <TabControl Opacity="0.75" x:Name="_tabcontrol" Grid.Row="2"  Grid.Column="4" BorderBrush="LightGreen" BorderThickness="3" TabStripPlacement="Top" 
                    Height="Auto" Width="Auto" VerticalAlignment="Top" SelectionChanged="_tabcontrol_SelectionChanged"  
                    Visibility="Visible">

            <TabItem Header="Collar"  IsEnabled="True" >
                <TabItem.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TabItem.LayoutTransform>

                <ListView x:Name="fieldMapping" VerticalAlignment="Top" Grid.Column="3" Grid.Row="3" Width="Auto" 
                          Height="250" Grid.RowSpan="1" ItemsSource="{Binding collarDataFields}"  
                          IsSynchronizedWithCurrentItem="True" SelectionMode="Single">

                    <ListView.View>
                        <GridView x:Name="fieldsToMap" >
                            <GridViewColumn Width="Auto" Header="Column" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Left" Text="{Binding Path=columnHeader}" TextAlignment="Center" FontSize="14" Foreground="Red" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="100" Header="Import Name" DisplayMemberBinding="{Binding Path=columnImportName}"/>
                            <GridViewColumn Width="100" Header="Import Type" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center" Text="{Binding Path=columnImportAs}" TextAlignment="Center"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="Auto" Header="Import As" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox Name="cboImport" MinWidth="150" MaxWidth="250" HorizontalAlignment="Right" SelectionChanged="cboImportAs_SelectionChanged" SelectedIndex="0">
                                            <TextBlock Text="{Binding Path=columnImportAs}" FontSize="14" Foreground="Blue"/>
                                            <ComboBoxItem Content="Hole ID" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="East (X)" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="North (Y)" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="Elev (Z)" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="Max Depth" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="Azimuth" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="Dip" Foreground="DarkGreen"/>
                                            <Separator/>
                                            <ComboBoxItem Content="Same As Source" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content="Numeric" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content ="Text" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content="Not Imported" Foreground="DarkOrange"/>
                                        </ComboBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                </ListView>

            </TabItem>

            <TabItem Header="Survey" IsEnabled="False" >
                <TabItem.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TabItem.LayoutTransform>
                <ListView x:Name="surveyMapping" VerticalAlignment="Top" Grid.Column="3" Grid.Row="3" Width="Auto" Height="250" Grid.RowSpan="1" ItemsSource="{Binding surveyDataFields}" IsSynchronizedWithCurrentItem="True" >
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                        </Style>
                    </ListView.Resources>

                    <ListView.View>
                        <GridView x:Name="surveysToMap">
                            <GridViewColumn Width="Auto" Header="Column" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Left" Text="{Binding Path=columnHeader}" TextAlignment="Center" FontSize="14" Foreground="Red" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="100" Header="Import Name" DisplayMemberBinding="{Binding Path=columnImportName}"/>
                            <GridViewColumn Width="100" Header="Import Type" DisplayMemberBinding="{Binding Path=columnImportAs}"/>

                            <GridViewColumn Width="Auto" Header="Import As" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox Name="cboImportAs" MinWidth="150" MaxWidth="250" HorizontalAlignment="Right" SelectionChanged="cboImportAs_SelectionChanged" SelectedIndex="0">
                                            <TextBlock Text="{Binding Path=columnImportAs}" FontSize="14" Foreground="Blue"/>
                                            <ComboBoxItem Content="Hole ID" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="Distance" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="Azimuth" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="Dip" Foreground="DarkGreen"/>
                                            <Separator/>
                                            <ComboBoxItem Content="Same As Source" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content="Numeric" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content ="Text" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content="Not Imported" Foreground="DarkOrange"/>

                                        </ComboBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                </ListView>

            </TabItem>

            <TabItem Header="Assay"  IsEnabled="False" >
                <TabItem.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TabItem.LayoutTransform>
                <ListView Name="assayMapping" VerticalAlignment="Top" Grid.Column="3" Grid.Row="3" Width="Auto" Height="250" Grid.RowSpan="1" ItemsSource="{Binding assayDataFields}" IsSynchronizedWithCurrentItem="True">
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Top" />

                        </Style>
                    </ListView.Resources>

                    <ListView.View>
                        <GridView x:Name="assaysToMap">
                            <GridViewColumn Width="Auto" Header="Column" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Left" Text="{Binding Path=columnHeader}" TextAlignment="Center" FontSize="14" Foreground="Red" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="100" Header="Import Name" DisplayMemberBinding="{Binding Path=columnImportName}"/>
                            <GridViewColumn Width="100" Header="Import Type" DisplayMemberBinding="{Binding Path=columnImportAs}"/>

                            <GridViewColumn Width="Auto" Header="Import As" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox Name="cboImportAs" MinWidth="150" MaxWidth="250" HorizontalAlignment="Right" SelectionChanged="cboImportAs_SelectionChanged" SelectedIndex="0">
                                            <TextBlock Text="{Binding Path=columnImportAs}" FontSize="14" Foreground="Blue"/>
                                            <ComboBoxItem Content="Hole ID" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="From" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="To" Foreground="DarkGreen"/>
                                            <Separator/>
                                            <ComboBoxItem Content="Sample ID" Foreground="DarkBlue"/>
                                            <ComboBoxItem Content="Grade" Foreground="DarkBlue"/>
                                            <ComboBoxItem Content="Density" Foreground="DarkBlue"/>
                                            <Separator/>
                                            <ComboBoxItem Content="Numeric" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content ="Text" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content="Same As Source" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content="Not Imported" Foreground="DarkOrange"/>
                                        </ComboBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                </ListView>

            </TabItem>


            <TabItem Header="Interval"  IsEnabled="False" >
                <TabItem.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TabItem.LayoutTransform>
                <ListView Name="lithoMapping" VerticalAlignment="Top" Grid.Column="3" Grid.Row="3" Width="Auto" Height="250" Grid.RowSpan="1" ItemsSource="{Binding intervalDataFields}" IsSynchronizedWithCurrentItem="True">
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Top" />

                        </Style>
                    </ListView.Resources>

                    <ListView.View>
                        <GridView x:Name="lithoToMap">
                            <GridViewColumn Width="Auto" Header="Column" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Left" Text="{Binding Path=columnHeader}" TextAlignment="Center" FontSize="14" Foreground="Red" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="100" Header="Import Name" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=columnImportName}"></TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="Auto" Header="Import As" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox Name="cboImportAs" MinWidth="150" MaxWidth="250" HorizontalAlignment="Right" SelectionChanged="cboImportAs_SelectionChanged" SelectedIndex="0">
                                            <TextBlock HorizontalAlignment="Left" Text="{Binding Path=columnImportAs}" FontSize="14" Foreground="Blue"/>
                                            <ComboBoxItem Content="Hole ID" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="From" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="To" Foreground="DarkGreen"/>
                                            <Separator/>
                                            <ComboBoxItem Content="Density" Foreground="DarkBlue"/>
                                            <ComboBoxItem Content="a" Foreground="DarkBlue" FontFamily="Symbol" />
                                            <ComboBoxItem Content="b" Foreground="DarkBlue" FontFamily="Symbol"/>
                                            <ComboBoxItem Content="g" Foreground="DarkBlue" FontFamily="Symbol"/>
                                            <Separator/>
                                            <ComboBoxItem Content="Numeric" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content ="Text" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content="Same As Source" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content="Not Imported" Foreground="DarkOrange"/>

                                        </ComboBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                </ListView>

            </TabItem>

            <TabItem Header="Continuous"  IsEnabled="False" >
                <TabItem.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </TabItem.LayoutTransform>
                <ListView Name="distMapping" VerticalAlignment="Top" Grid.Column="3" Grid.Row="3" Width="Auto" Height="250" Grid.RowSpan="1" ItemsSource="{Binding continuousDataFields}" IsSynchronizedWithCurrentItem="True">
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Top" />

                        </Style>
                    </ListView.Resources>

                    <ListView.View>
                        <GridView x:Name="distToMap">
                            <GridViewColumn Width="Auto" Header="Column" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Left" Text="{Binding Path=columnHeader}" TextAlignment="Center" FontSize="14" Foreground="Red" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="100" Header="Import Name" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=columnImportName}"></TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="Auto" Header="Import As" >
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox Name="cboImportAs" MinWidth="150" MaxWidth="250" HorizontalAlignment="Right" SelectionChanged="cboImportAs_SelectionChanged" SelectedIndex="0">
                                            <TextBlock HorizontalAlignment="Left" Text="{Binding Path=columnImportAs}" FontSize="14" Foreground="Blue"/>
                                            <ComboBoxItem Content="Hole ID" Foreground="DarkGreen"/>
                                            <ComboBoxItem Content="Distance" Foreground="DarkGreen"/>
                                            <Separator />
                                            <ComboBoxItem Content="a" Foreground="DarkBlue" FontFamily="Symbol" />
                                            <ComboBoxItem Content="b" Foreground="DarkBlue" FontFamily="Symbol"/>
                                            <ComboBoxItem Content="g" Foreground="DarkBlue" FontFamily="Symbol"/>
                                            <Separator/>
                                            <ComboBoxItem Content="Numeric" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content ="Text" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content="Same As Source" Foreground="DarkOrange"/>
                                            <ComboBoxItem Content="Not Imported" Foreground="DarkOrange"/>

                                        </ComboBox>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                        </GridView>
                    </ListView.View>
                </ListView>

            </TabItem>


        </TabControl>


        <StackPanel Grid.Column="1" Grid.Row="3" Orientation="Horizontal" Grid.ColumnSpan="2">

            <Button Name="btnDesurvey" IsEnabled="true" Content="Create Drillhole Trace" FontSize="16" HorizontalAlignment="Center" 
                    VerticalAlignment="Bottom" Width="240" Height="30" Click="btnCreateHole_Click" Visibility="Visible"></Button>

            <Button Name="btnReturn" Content="Return to Previous" HorizontalAlignment="Left" Width="180" Click="btnReturn_Click"/>

        </StackPanel>



        <CheckBox Grid.Column="2" Grid.Row="4" Name="chkImport" Content="{Binding importAllColumns}" IsChecked="False" VerticalAlignment="Bottom" HorizontalAlignment="Right" Click="chkImport_Click" Visibility="Visible"/>

        <RadioButton Name="radSurvey" VerticalAlignment="Bottom" Content="Collar" Grid.Column="1" Grid.Row="4" Visibility="Visible" ToolTip="Use Azimuth and Dip contained in 'Collar' table" Click="radSurvey_Click"/>
        <RadioButton Name="radVertical" VerticalAlignment="Bottom" Content="Vertical"  Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="4" HorizontalAlignment="Left" Margin="60,0,0,0" Visibility="Visible" 
                     ToolTip="Treat all holes as 'Vertical'" Click="radVertical_Click"/>
        <RadioButton Name="radDhole" VerticalAlignment="Bottom" Content="Downhole" IsChecked="True" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="4" HorizontalAlignment="Left" Margin="130,0,0,0" Visibility="Visible" 
                     ToolTip="Use Azimuth and Dip from downhole 'Survey' table" Click="radDhole_Click" />

        <Grid Grid.Column="4" Grid.Row="3" Grid.RowSpan="2" Grid.ColumnSpan="1" Name="grdValid">
            <Grid.Resources>
                <ControlTemplate x:Key="validGlassButton" TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <!-- Base style that sets corner radii and stroke thickness. -->
                        <Style x:Key="styBase" TargetType="{x:Type Rectangle}">
                            <Setter Property="RadiusX" Value="20"/>
                            <Setter Property="RadiusY" Value="20"/>
                            <Setter Property="StrokeThickness" Value="5"/>
                        </Style>

                        <!-- Style for "normal" status. -->
                        <Style TargetType="{x:Type Rectangle}" BasedOn="{StaticResource styBase}">
                            <Setter Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="DarkBlue" Offset="0"/>
                                        <GradientStop Color="LightBlue" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="DarkBlue" Offset="1"/>
                                        <GradientStop Color="LightBlue" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <!-- Style when IsDefaulted. -->
                        <Style x:Key="styIsDefaulted" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource styBase}">
                            <Setter Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="DarkBlue" Offset="0"/>
                                        <GradientStop Color="LightBlue" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="DarkBlue" Offset="1"/>
                                        <GradientStop Color="Black" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <!-- Style when disabled. -->
                        <Style x:Key="styDisabled" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource styBase}">
                            <Setter Property="Opacity" Value="0.75"/>
                            <Setter Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="Gray" Offset="0"/>
                                        <GradientStop Color="White" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Stroke">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="Gray" Offset="1"/>
                                        <GradientStop Color="White" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grdMain" ClipToBounds="True" Opacity="0.5"
			 Width="{TemplateBinding Width}"
			 Height="{TemplateBinding Height}">
                        <Rectangle x:Name="rectMain"/>

                        <ContentPresenter
				 VerticalAlignment="Center"
                 HorizontalAlignment="Center"/>
                    </Grid>

                    <!-- Behaviors. -->
                    <ControlTemplate.Triggers>
                        <!-- Mouse over. -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="grdMain" Property="Opacity"
                     Value="0.75"/>
                        </Trigger>

                        <!-- Focus. -->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="grdMain" Property="Opacity"
                     Value="0.75"/>
                        </Trigger>

                        <!-- Defaulted. -->
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="rectMain" Property="Style"
                     Value="{StaticResource styIsDefaulted}"/>
                        </Trigger>

                        <!-- Pressed. This comes after Focus so it gets precedence. -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="grdMain" Property="Opacity"
                     Value="1"/>
                        </Trigger>

                        <!-- Disabled. This comes last so it gets ultimate precedence. -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rectMain" Property="Style"
                     Value="{StaticResource styDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="110"/>
                    <Setter Property="Margin" Value="10"/>
                    <Setter Property="FontStyle" Value="Normal"/>
                    <Setter Property="FontSize" Value="18"/>
                    <Setter Property="Template" Value="{StaticResource validGlassButton}"/>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>

            </Grid.RowDefinitions>

            <CheckBox Grid.Column="2"  Grid.Row="0" Name="chkSkip" Content="Skip Table" IsChecked="False" Margin="0,0,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Click="chkSkip_Click" Visibility="Hidden"></CheckBox>
            <StackPanel Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" >
                <Button Name="btnStatistics" Content="Show Statistics" VerticalAlignment="Center" Height="25" Width="125" FontSize="14" Visibility="Visible" Click="btnStatistics_Click"></Button>
                <Button Name="btnValidateHoles" Content="Show Validation" HorizontalAlignment="Right" VerticalAlignment="Center" Height="25" Width="150" FontSize="14" Visibility="Visible" Click="ValidateDrillholes"></Button>
                <Button x:Name="btnValidate" IsEnabled="true" Content="Fix Validation"  Margin="0,0,0,0" Foreground="Red" Height="30" FontWeight="Bold" FontSize="14" Width="150" HorizontalAlignment="Center" 
                        ToolTip="Validate drillhole data" VerticalAlignment="Center"  Click="btnValidate_Click" Visibility="Visible"/>
            </StackPanel>
        </Grid>

        <Rectangle Height="0" Fill="DarkGray" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="6" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,5"/>

        <DockPanel Grid.Column="0" Grid.ColumnSpan="6" Grid.Row="7" VerticalAlignment="Bottom">
            <StatusBar DockPanel.Dock="Bottom">

                <StatusBar.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF4F8F9" Offset="0"/>
                        <GradientStop Color="#FFA6A4A5" Offset="1"/>
                    </LinearGradientBrush>
                </StatusBar.Background>

                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="120" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="100" />
                            </Grid.ColumnDefinitions>
                        </Grid>

                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <StatusBarItem>
                    <TextBlock HorizontalAlignment="Left"  FontWeight="ExtraLight" FontStyle="Italic" 
                    Text="{Binding displayItems}" />
                </StatusBarItem>

                <Separator Grid.Column="1" />

                <StatusBarItem Grid.Column="2">

                    <TextBlock Name="lblFile" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="ExtraLight" FontStyle="Italic" 
                    Text="{Binding tableCaption, UpdateSourceTrigger=PropertyChanged}" IsEnabledChanged="lblFile_IsEnabledChanged"/>

                </StatusBarItem>

                <Separator Grid.Column="3" />

                <StatusBarItem Grid.Column="4">
                    <TextBlock Name="lblProgress" HorizontalAlignment="Center"/>
                </StatusBarItem>

                <Separator Grid.Column="5" />

                <StatusBarItem Grid.Column="6">
                    <ProgressBar Name="prgProgress" Value="50" Width="Auto" Height="16" IsIndeterminate="True" Visibility="Hidden"/>
                </StatusBarItem>
            </StatusBar>
        </DockPanel>

    </Grid>
</Page>
